name: CI Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 15.x, 16.x, 18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Get version
        run: TALKBACK_VERSION=$(cat package.json | jq -r '.version') && echo "TALKBACK_VERSION=$TALKBACK_VERSION" >> $GITHUB_ENV && echo $TALKBACK_VERSION
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile
      - run: yarn ci
      - name: Save artifact
        if: ${{ success() && contains(matrix.node-version, '15') && contains(github.ref, 'refs/tags/v') }}
        uses: actions/upload-artifact@v3
        with:
          name: talkback-dist-${{ env.TALKBACK_VERSION }}
          path: ./dist
          retention-days: 1
  publish:
    needs: build
    if: ${{ success() && contains(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get version
        run: TALKBACK_VERSION=$(cat package.json | jq -r '.version') && echo "TALKBACK_VERSION=$TALKBACK_VERSION" >> $GITHUB_ENV && echo $TALKBACK_VERSION
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
          always-auth: true
      - uses: actions/download-artifact@v3
        with:
          name: talkback-dist-${{ env.TALKBACK_VERSION }}
          path: ./dist
      - run: yarn publish
        working-directory: dist
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
